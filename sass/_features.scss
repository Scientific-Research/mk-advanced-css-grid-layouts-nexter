.features {
  // background-color: $color-grey-light-2;
  grid-column: center-start / center-end;

  // some definitions for our feature items:
  margin: 15rem 0;

  // we want to have these grid items in a grid container!
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 6rem;

  // grid-template-rows: auto auto; we don't need this, the compiler do it automatically!
  // it will create for us as implicit rows and not explicit - it is just enough to define
  // the columns, then it will create us the rows automatically!
}

.feature {
  // feature is a grid item itself and would be a grid container.
  // we can nest the grid like flexbox deeply:
  // here we want to put the icon at the left hand in line of headline as first row
  // and the text at the bottomn of headline in second row, it means: 2 rows x 2 columns
  display: grid;
  grid-template-columns: min-content 1fr;
  // here to make a little bit gap between icon and texts in both direction of row and column!
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem;

  &__icon {
    fill: $color-primary;
    width: 4.5rem;
    height: 4.5rem;
    grid-row: 1 / span 2; // the icon takes the whole column, therefore, the text under
    // the icon moves to the right side!
    // OR
    // grid-row: 1 / -1; this doesn't work here, because we don't have explicit rows and
    // we have here only implicit rows!
    transform: translateY(-1rem); // this will move the icon a little bit to the top in Y direction
    // and we see now that the middle of icon is in line of middle of our headline!
  }

  &__text {
    font-size: 1.7rem;
  }
}
