.homes {
  // background-color: $color-secondary;
  grid-column: center-start / center-end;
  margin: 15rem 0;

  // homes is parent elemnt or grid container for our six grid cards!
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  // it will try to fit the grid cards as it can with min. 25rem=>250px and max. 1fr,
  // it means the width of every grid card is variable between 25rem and max. 1fr
  // it ensures us that our six grid cards are responsive without writing any media query code!

  grid-gap: 7rem;
}

.home {
  background-color: $color-grey-light-1;

  // most of the time, we define the grid for columns and CSS will figure out the
  // rows automatically!
  display: grid;
  grid-template-columns: repeat(2, 1fr);

  &__img {
    width: 100%;
    grid-row: 1/2; // to bring the image back and show it on the bottom of the heart!
    grid-column: 1/-1; // to have the image spanned entire the two columns
    z-index: 1; // place the image under the like icon! to ensure that it stays always
    // on the bottom of the like-icon!
  }

  &__like {
    grid-column: 2/3;
    grid-row: 1/2;
    fill: $color-primary;
    height: 2.5rem;
    width: 2.5rem;
    z-index: 2; // place the like-icon on top of the image! to ensure that it stays always
    // on the top of the image!
    // margin-right: auto; this doesn't work here in grid
    justify-self: end; // this works in grid
    margin: 1rem;
  }

  &__name {
    grid-column: 1/-1; // to have the name spanned entire the two columns
    font-family: $font-display;
    font-size: 1.6rem;
    text-align: center;
    padding: 1.25rem;
    background-color: $color-secondary;
    color: #fff;
    font-weight: 400;
  }

  &__location,
  &__rooms,
  &__area,
  &__price {
    svg {
      fill: $color-primary;
      height: 2rem;
      width: 2rem;
    }
  }

  &__btn {
    grid-column: 1/-1;
  }
}
